// <auto-generated />
using System;
using GestaoEscolar.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestaoEscolar.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181114172843_addAluno")]
    partial class addAluno
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestaoEscolar.Models.Aluno", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apelido")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("celular")
                        .HasMaxLength(50);

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("dataNascimento");

                    b.Property<string>("documentoIdentificacao")
                        .HasMaxLength(50);

                    b.Property<string>("emailEncarregado")
                        .HasMaxLength(50);

                    b.Property<string>("emailMae")
                        .HasMaxLength(50);

                    b.Property<string>("emailPai")
                        .HasMaxLength(50);

                    b.Property<string>("localNascimento")
                        .IsRequired();

                    b.Property<string>("localidade")
                        .HasMaxLength(50);

                    b.Property<string>("morada")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("nacionalidade")
                        .IsRequired();

                    b.Property<string>("nib")
                        .HasMaxLength(20);

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("nomeEncarregado")
                        .HasMaxLength(100);

                    b.Property<string>("nomeMae")
                        .HasMaxLength(100);

                    b.Property<string>("nomePai")
                        .HasMaxLength(100);

                    b.Property<string>("numeroDocumento")
                        .HasMaxLength(50);

                    b.Property<bool>("sexo");

                    b.Property<string>("telefone")
                        .HasMaxLength(50);

                    b.Property<string>("telefoneEncarregado")
                        .HasMaxLength(50);

                    b.Property<string>("telefoneMãe")
                        .HasMaxLength(50);

                    b.Property<string>("telefonePai")
                        .HasMaxLength(50);

                    b.Property<DateTime>("validadeDocumento");

                    b.HasKey("id");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("GestaoEscolar.Models.AnoLectivo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Classeid");

                    b.Property<int>("anoId");

                    b.Property<string>("codigo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("dataFim");

                    b.Property<DateTime>("dataInicio");

                    b.Property<string>("desc")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.HasIndex("Classeid");

                    b.HasIndex("anoId");

                    b.ToTable("AnoLectivo");
                });

            modelBuilder.Entity("GestaoEscolar.Models.Anos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ano");

                    b.Property<string>("desc")
                        .HasMaxLength(20);

                    b.Property<string>("estado")
                        .HasMaxLength(20);

                    b.Property<DateTime>("fim");

                    b.Property<DateTime>("inicio");

                    b.HasKey("id");

                    b.ToTable("Anos");
                });

            modelBuilder.Entity("GestaoEscolar.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("GestaoEscolar.Models.Classe", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc")
                        .HasMaxLength(20);

                    b.Property<string>("nivelCode")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.HasIndex("nivelCode");

                    b.ToTable("Classe");
                });

            modelBuilder.Entity("GestaoEscolar.Models.Disciplina", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("classe_id");

                    b.Property<string>("desc")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.HasIndex("classe_id");

                    b.ToTable("Disciplina");
                });

            modelBuilder.Entity("GestaoEscolar.Models.Nivel", b =>
                {
                    b.Property<string>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20);

                    b.Property<string>("desc")
                        .HasMaxLength(20);

                    b.HasKey("codigo");

                    b.ToTable("Nivel");
                });

            modelBuilder.Entity("GestaoEscolar.Models.Turmas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("classeId");

                    b.Property<string>("desc")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.HasIndex("classeId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GestaoEscolar.Models.AnoLectivo", b =>
                {
                    b.HasOne("GestaoEscolar.Models.Classe")
                        .WithMany("AnoLectivo")
                        .HasForeignKey("Classeid");

                    b.HasOne("GestaoEscolar.Models.Anos", "Ano")
                        .WithMany("AnoLectivo")
                        .HasForeignKey("anoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestaoEscolar.Models.Classe", b =>
                {
                    b.HasOne("GestaoEscolar.Models.Nivel", "Nivel")
                        .WithMany()
                        .HasForeignKey("nivelCode");
                });

            modelBuilder.Entity("GestaoEscolar.Models.Disciplina", b =>
                {
                    b.HasOne("GestaoEscolar.Models.Classe", "classe")
                        .WithMany("Disciplinas")
                        .HasForeignKey("classe_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestaoEscolar.Models.Turmas", b =>
                {
                    b.HasOne("GestaoEscolar.Models.Classe", "Classe")
                        .WithMany()
                        .HasForeignKey("classeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GestaoEscolar.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GestaoEscolar.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoEscolar.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GestaoEscolar.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
